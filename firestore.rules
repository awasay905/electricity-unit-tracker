rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is a member of a specific house.
    // It reads the user's own document to find their houseId.
    function isHouseMember(houseId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.houseId == houseId;
    }

    // Users can only read or update their own document. Anyone can create a user doc (on signup).
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Rules for houses and their subcollections (readings).
    match /houses/{houseId} {
      // Only members of the house can read the house document.
      allow read: if isHouseMember(houseId);

      // Only the owner can update the house document.
      allow update: if isHouseMember(houseId) && request.auth.uid == get(/databases/$(database)/documents/houses/$(houseId)).data.ownerId;
      
      // Anyone authenticated can create a house. The associated user document update is handled by the user rules.
      allow create: if request.auth.uid != null;

      // Rules for the 'readings' subcollection within a house.
      match /readings/{readingId} {
        // Any member of the house can create or read readings.
        allow read, create: if isHouseMember(houseId);
      }
    }

    // Join requests can be created by any authenticated user.
    // Only the owner of the requested house can read or delete them.
    match /joinRequests/{requestId} {
      allow create: if request.auth.uid != null;
      allow read, delete: if get(/databases/$(database)/documents/houses/$(request.resource.data.houseId)).data.ownerId == request.auth.uid;
    }
  }
}
