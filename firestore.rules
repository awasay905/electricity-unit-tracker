rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to get user data
    function getUser(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data;
    }

    // Helper function to check if a user belongs to a specific house
    function isHouseMember(houseId) {
      return isAuthenticated() && getUser(request.auth.uid).houseId == houseId;
    }
    
    // Helper function to check if a user is the owner of a specific house
    function isHouseOwner(houseId) {
        return isAuthenticated() && get(/databases/$(database)/documents/houses/$(houseId)).data.ownerId == request.auth.uid;
    }

    // --- User Data ---
    // Users can read and update their own data. They cannot create or delete their user doc via these rules.
    match /users/{userId} {
      allow read, update: if isAuthenticated() && request.auth.uid == userId;
    }

    // --- House Data ---
    // Any member of a house can read it. Only the owner can update it.
    match /houses/{houseId} {
      allow read: if isHouseMember(houseId);
      allow update: if isHouseOwner(houseId);
      
      // Readings can be created and read by any house member.
      match /readings/{readingId} {
        allow read, create: if isHouseMember(houseId);
      }
    }
    
    // --- Join Requests ---
    // Authenticated users can create requests. Only the owner of the requested house can read them.
    match /joinRequests/{requestId} {
      allow create: if isAuthenticated();
      allow read: if isHouseOwner(request.resource.data.houseId);
      // Requests are deleted by the backend, not updated by clients.
      allow update, delete: if false;
    }
  }
}
